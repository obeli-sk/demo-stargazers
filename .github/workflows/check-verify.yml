name: check-verify
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

on:
  workflow_run:
    workflows:
      - check-test
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -xe {0}

jobs:
  verify:
    runs-on: ubuntu-24.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4
      - id: git-info
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
      - name: Populate the nix store
        run: nix develop --command echo
      - name: Build WASM components
        run: nix develop --command cargo build

      - name: Download obelisk
        run: |
          REPO="obeli-sk/obelisk"
          FILE="obelisk-x86_64-unknown-linux-gnu.tar.gz"

          LATEST_TAG=$(curl -sI -L https://github.com/$REPO/releases/latest \
              | grep -i "location:" \
              | grep -oP 'tag/\K[^/]+' \
              | sed 's/\r//')

          if [ -z "$LATEST_TAG" ]; then
            echo "Failed to determine the latest release tag!"
            exit 1
          fi

          ARTIFACT_URL="https://github.com/$REPO/releases/download/$LATEST_TAG/$FILE"
          curl --fail -L -o "$FILE" $ARTIFACT_URL
          tar xzfv "$FILE"
      - name: Verify obelisk-local.toml
        run: ./obelisk server verify --config obelisk-local.toml
      - name: Verify obelisk-oci.toml
        run: ./obelisk server verify --config obelisk-oci.toml
