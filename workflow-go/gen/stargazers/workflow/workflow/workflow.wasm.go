// Code generated by wit-bindgen-go. DO NOT EDIT.

package workflow

import (
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "stargazers:workflow".

//go:wasmimport stargazers:workflow/workflow star-added
//go:noescape
func wasmimport_StarAdded(login0 *uint8, login1 uint32, repo0 *uint8, repo1 uint32, result *cm.Result[string, struct{}, string])

//go:wasmimport stargazers:workflow/workflow star-added-parallel
//go:noescape
func wasmimport_StarAddedParallel(login0 *uint8, login1 uint32, repo0 *uint8, repo1 uint32, result *cm.Result[string, struct{}, string])

//go:wasmimport stargazers:workflow/workflow star-removed
//go:noescape
func wasmimport_StarRemoved(login0 *uint8, login1 uint32, repo0 *uint8, repo1 uint32, result *cm.Result[string, struct{}, string])

//go:wasmimport stargazers:workflow/workflow backfill
//go:noescape
func wasmimport_Backfill(repo0 *uint8, repo1 uint32, result *cm.Result[string, struct{}, string])

//go:wasmimport stargazers:workflow/workflow backfill-parallel
//go:noescape
func wasmimport_BackfillParallel(repo0 *uint8, repo1 uint32, result *cm.Result[string, struct{}, string])

//go:wasmexport stargazers:workflow/workflow#star-added
//export stargazers:workflow/workflow#star-added
func wasmexport_StarAdded(login0 *uint8, login1 uint32, repo0 *uint8, repo1 uint32) (result *cm.Result[string, struct{}, string]) {
	login := cm.LiftString[string]((*uint8)(login0), (uint32)(login1))
	repo := cm.LiftString[string]((*uint8)(repo0), (uint32)(repo1))
	result_ := Exports.StarAdded(login, repo)
	result = &result_
	return
}

//go:wasmexport stargazers:workflow/workflow#star-added-parallel
//export stargazers:workflow/workflow#star-added-parallel
func wasmexport_StarAddedParallel(login0 *uint8, login1 uint32, repo0 *uint8, repo1 uint32) (result *cm.Result[string, struct{}, string]) {
	login := cm.LiftString[string]((*uint8)(login0), (uint32)(login1))
	repo := cm.LiftString[string]((*uint8)(repo0), (uint32)(repo1))
	result_ := Exports.StarAddedParallel(login, repo)
	result = &result_
	return
}

//go:wasmexport stargazers:workflow/workflow#star-removed
//export stargazers:workflow/workflow#star-removed
func wasmexport_StarRemoved(login0 *uint8, login1 uint32, repo0 *uint8, repo1 uint32) (result *cm.Result[string, struct{}, string]) {
	login := cm.LiftString[string]((*uint8)(login0), (uint32)(login1))
	repo := cm.LiftString[string]((*uint8)(repo0), (uint32)(repo1))
	result_ := Exports.StarRemoved(login, repo)
	result = &result_
	return
}

//go:wasmexport stargazers:workflow/workflow#backfill
//export stargazers:workflow/workflow#backfill
func wasmexport_Backfill(repo0 *uint8, repo1 uint32) (result *cm.Result[string, struct{}, string]) {
	repo := cm.LiftString[string]((*uint8)(repo0), (uint32)(repo1))
	result_ := Exports.Backfill(repo)
	result = &result_
	return
}

//go:wasmexport stargazers:workflow/workflow#backfill-parallel
//export stargazers:workflow/workflow#backfill-parallel
func wasmexport_BackfillParallel(repo0 *uint8, repo1 uint32) (result *cm.Result[string, struct{}, string]) {
	repo := cm.LiftString[string]((*uint8)(repo0), (uint32)(repo1))
	result_ := Exports.BackfillParallel(repo)
	result = &result_
	return
}
