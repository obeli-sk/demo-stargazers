// Code generated by wit-bindgen-go. DO NOT EDIT.

package workflow

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "stargazers:workflow/workflow".
var Exports struct {
	// StarAdded represents the caller-defined, exported function "star-added".
	//
	// Called by the GitHub webhook when a star is added to a repository.
	//
	//	star-added: func(login: string, repo: string) -> result<_, string>
	StarAdded func(login string, repo string) (result cm.Result[string, struct{}, string])

	// StarAddedParallel represents the caller-defined, exported function "star-added-parallel".
	//
	// Parallel version of `star-added`.
	//
	//	star-added-parallel: func(login: string, repo: string) -> result<_, string>
	StarAddedParallel func(login string, repo string) (result cm.Result[string, struct{}, string])

	// StarRemoved represents the caller-defined, exported function "star-removed".
	//
	// Called by the GitHub webhook when a star is removed from a repository.
	//
	//	star-removed: func(login: string, repo: string) -> result<_, string>
	StarRemoved func(login string, repo string) (result cm.Result[string, struct{}, string])

	// Backfill represents the caller-defined, exported function "backfill".
	//
	// This workflow lists the current stargazers of a repository and calls `star-added`
	// for each of them.
	//
	//	backfill: func(repo: string) -> result<_, string>
	Backfill func(repo string) (result cm.Result[string, struct{}, string])

	// BackfillParallel represents the caller-defined, exported function "backfill-parallel".
	//
	// Parallel version of `backfill`.
	//
	//	backfill-parallel: func(repo: string) -> result<_, string>
	BackfillParallel func(repo string) (result cm.Result[string, struct{}, string])
}
