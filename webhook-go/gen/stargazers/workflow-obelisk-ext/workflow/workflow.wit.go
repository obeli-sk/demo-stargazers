// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package workflow represents the imported interface "stargazers:workflow-obelisk-ext/workflow".
package workflow

import (
	"github.com/obeli-sk/demo-stargazers/webhook-go/gen/obelisk/types/execution"
	"github.com/obeli-sk/demo-stargazers/webhook-go/gen/obelisk/types/time"
	"go.bytecodealliance.org/cm"
)

// ExecutionID represents the type alias "stargazers:workflow-obelisk-ext/workflow#execution-id".
//
// See [execution.ExecutionID] for more information.
type ExecutionID = execution.ExecutionID

// JoinSetID represents the imported type alias "stargazers:workflow-obelisk-ext/workflow#join-set-id".
//
// See [execution.JoinSetID] for more information.
type JoinSetID = execution.JoinSetID

// ScheduleAt represents the type alias "stargazers:workflow-obelisk-ext/workflow#schedule-at".
//
// See [time.ScheduleAt] for more information.
type ScheduleAt = time.ScheduleAt

// ExecutionError represents the type alias "stargazers:workflow-obelisk-ext/workflow#execution-error".
//
// See [execution.ExecutionError] for more information.
type ExecutionError = execution.ExecutionError

// StarAddedSubmit represents the imported function "star-added-submit".
//
//	star-added-submit: func(join-set-id: borrow<join-set-id>, login: string, repo:
//	string) -> execution-id
//
//go:nosplit
func StarAddedSubmit(joinSetID JoinSetID, login string, repo string) (result ExecutionID) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	login0, login1 := cm.LowerString(login)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_StarAddedSubmit((uint32)(joinSetId0), (*uint8)(login0), (uint32)(login1), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// StarAddedAwaitNext represents the imported function "star-added-await-next".
//
//	star-added-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id,
//	result<_, string>>, tuple<execution-id, execution-error>>
//
//go:nosplit
func StarAddedAwaitNext(joinSetID JoinSetID) (result cm.Result[TupleExecutionIDResultStringShape, cm.Tuple[ExecutionID, cm.Result[string, struct{}, string]], cm.Tuple[ExecutionID, ExecutionError]]) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	wasmimport_StarAddedAwaitNext((uint32)(joinSetId0), &result)
	return
}

// StarAddedSchedule represents the imported function "star-added-schedule".
//
//	star-added-schedule: func(schedule-at: schedule-at, login: string, repo: string)
//	-> execution-id
//
//go:nosplit
func StarAddedSchedule(scheduleAt ScheduleAt, login string, repo string) (result ExecutionID) {
	scheduleAt0, scheduleAt1, scheduleAt2 := lower_ScheduleAt(scheduleAt)
	login0, login1 := cm.LowerString(login)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_StarAddedSchedule((uint32)(scheduleAt0), (uint64)(scheduleAt1), (uint64)(scheduleAt2), (*uint8)(login0), (uint32)(login1), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// StarAddedParallelSubmit represents the imported function "star-added-parallel-submit".
//
//	star-added-parallel-submit: func(join-set-id: borrow<join-set-id>, login: string,
//	repo: string) -> execution-id
//
//go:nosplit
func StarAddedParallelSubmit(joinSetID JoinSetID, login string, repo string) (result ExecutionID) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	login0, login1 := cm.LowerString(login)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_StarAddedParallelSubmit((uint32)(joinSetId0), (*uint8)(login0), (uint32)(login1), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// StarAddedParallelAwaitNext represents the imported function "star-added-parallel-await-next".
//
//	star-added-parallel-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id,
//	result<_, string>>, tuple<execution-id, execution-error>>
//
//go:nosplit
func StarAddedParallelAwaitNext(joinSetID JoinSetID) (result cm.Result[TupleExecutionIDResultStringShape, cm.Tuple[ExecutionID, cm.Result[string, struct{}, string]], cm.Tuple[ExecutionID, ExecutionError]]) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	wasmimport_StarAddedParallelAwaitNext((uint32)(joinSetId0), &result)
	return
}

// StarAddedParallelSchedule represents the imported function "star-added-parallel-schedule".
//
//	star-added-parallel-schedule: func(schedule-at: schedule-at, login: string, repo:
//	string) -> execution-id
//
//go:nosplit
func StarAddedParallelSchedule(scheduleAt ScheduleAt, login string, repo string) (result ExecutionID) {
	scheduleAt0, scheduleAt1, scheduleAt2 := lower_ScheduleAt(scheduleAt)
	login0, login1 := cm.LowerString(login)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_StarAddedParallelSchedule((uint32)(scheduleAt0), (uint64)(scheduleAt1), (uint64)(scheduleAt2), (*uint8)(login0), (uint32)(login1), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// StarRemovedSubmit represents the imported function "star-removed-submit".
//
//	star-removed-submit: func(join-set-id: borrow<join-set-id>, login: string, repo:
//	string) -> execution-id
//
//go:nosplit
func StarRemovedSubmit(joinSetID JoinSetID, login string, repo string) (result ExecutionID) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	login0, login1 := cm.LowerString(login)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_StarRemovedSubmit((uint32)(joinSetId0), (*uint8)(login0), (uint32)(login1), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// StarRemovedAwaitNext represents the imported function "star-removed-await-next".
//
//	star-removed-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id,
//	result<_, string>>, tuple<execution-id, execution-error>>
//
//go:nosplit
func StarRemovedAwaitNext(joinSetID JoinSetID) (result cm.Result[TupleExecutionIDResultStringShape, cm.Tuple[ExecutionID, cm.Result[string, struct{}, string]], cm.Tuple[ExecutionID, ExecutionError]]) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	wasmimport_StarRemovedAwaitNext((uint32)(joinSetId0), &result)
	return
}

// StarRemovedSchedule represents the imported function "star-removed-schedule".
//
//	star-removed-schedule: func(schedule-at: schedule-at, login: string, repo: string)
//	-> execution-id
//
//go:nosplit
func StarRemovedSchedule(scheduleAt ScheduleAt, login string, repo string) (result ExecutionID) {
	scheduleAt0, scheduleAt1, scheduleAt2 := lower_ScheduleAt(scheduleAt)
	login0, login1 := cm.LowerString(login)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_StarRemovedSchedule((uint32)(scheduleAt0), (uint64)(scheduleAt1), (uint64)(scheduleAt2), (*uint8)(login0), (uint32)(login1), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// BackfillSubmit represents the imported function "backfill-submit".
//
//	backfill-submit: func(join-set-id: borrow<join-set-id>, repo: string) -> execution-id
//
//go:nosplit
func BackfillSubmit(joinSetID JoinSetID, repo string) (result ExecutionID) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_BackfillSubmit((uint32)(joinSetId0), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}

// BackfillAwaitNext represents the imported function "backfill-await-next".
//
//	backfill-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id,
//	result<_, string>>, tuple<execution-id, execution-error>>
//
//go:nosplit
func BackfillAwaitNext(joinSetID JoinSetID) (result cm.Result[TupleExecutionIDResultStringShape, cm.Tuple[ExecutionID, cm.Result[string, struct{}, string]], cm.Tuple[ExecutionID, ExecutionError]]) {
	joinSetId0 := cm.Reinterpret[uint32](joinSetID)
	wasmimport_BackfillAwaitNext((uint32)(joinSetId0), &result)
	return
}

// BackfillSchedule represents the imported function "backfill-schedule".
//
//	backfill-schedule: func(schedule-at: schedule-at, repo: string) -> execution-id
//
//go:nosplit
func BackfillSchedule(scheduleAt ScheduleAt, repo string) (result ExecutionID) {
	scheduleAt0, scheduleAt1, scheduleAt2 := lower_ScheduleAt(scheduleAt)
	repo0, repo1 := cm.LowerString(repo)
	wasmimport_BackfillSchedule((uint32)(scheduleAt0), (uint64)(scheduleAt1), (uint64)(scheduleAt2), (*uint8)(repo0), (uint32)(repo1), &result)
	return
}
