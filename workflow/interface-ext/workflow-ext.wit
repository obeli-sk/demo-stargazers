package stargazers:workflow-obelisk-ext;

interface workflow {
    use obelisk:types/execution.{execution-id, join-set-id};
    use obelisk:types/time.{schedule-at};
    use obelisk:types/execution.{execution-error};

    star-added-submit: func(join-set-id: borrow<join-set-id>, login: string, repo: string) -> execution-id;

    star-added-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, tuple<execution-id, execution-error>>;

    star-added-schedule: func(schedule-at: schedule-at, login: string, repo: string) -> execution-id;

    star-added-parallel-submit: func(join-set-id: borrow<join-set-id>, login: string, repo: string) -> execution-id;

    star-added-parallel-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, tuple<execution-id, execution-error>>;

    star-added-parallel-schedule: func(schedule-at: schedule-at, login: string, repo: string) -> execution-id;

    star-removed-submit: func(join-set-id: borrow<join-set-id>, login: string, repo: string) -> execution-id;

    star-removed-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, tuple<execution-id, execution-error>>;

    star-removed-schedule: func(schedule-at: schedule-at, login: string, repo: string) -> execution-id;

    backfill-submit: func(join-set-id: borrow<join-set-id>, repo: string) -> execution-id;

    backfill-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, tuple<execution-id, execution-error>>;

    backfill-schedule: func(schedule-at: schedule-at, repo: string) -> execution-id;
}
